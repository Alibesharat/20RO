@model DAL.ServiceRequset
@{
    ViewData["Title"] = "جزییات درخواست";

    var data = ViewData["navigation"];

}


<div class="row">
    <div class="col s12 ">
        <div class="card">
            <div class="card-map">
                <div id='map'>

                </div>
            </div>
            <div class="card-content">
                <p></p>
            </div>

        </div>
    </div>
    <div class="col s12 ">
        <div class="card">

            <div class="card-content">
                @if (Model.RequsetState == DAL.RequsetSate.Servicing)
                {
                    var driver = Model?.TaxiService?.Driver;
                    <div class="row">
                        <div class="col s12 m4">
                            <div class="row">
                                <span class="btn contant">
                                    @driver?.Name
                                </span>
                            </div>
                            <div class="row">
                                <span class="btn contant">
                                    <a href="tel:  @driver?.PhoneNubmber">
                                        تماس با راننده
                                    </a>

                                </span>
                            </div>
                            <div class="row">
                                <span class="btn contant">
                                    @driver?.CarName - @driver?.CarColor  @driver?.PelakNumber
                                </span>
                            </div>


                        </div>

                        <div class="col s12 m4 left">
                            <p class="center">
                                <img class="img-circle " src="@Const.Driver_20ro_AvatarPath_full/@driver?.AvatarPath" width="130" height="130" />

                            </p>
                        </div>
                    </div>


                    <hr />
                }




                <div class="row">
                    <div class="col s12 m8">
                        <span class="btn contant">
                            <span class="small-info">آموزشگاه  @Model?.Academy?.Name</span>  @Model?.Academy?.Address
                        </span>
                    </div>
                </div>
                <div class="row">
                    <div class="col s12 m3">
                        <span class="btn contant">
                            <span class="large-info">   مسافت </span>    @Model.Distance  کیلومتر
                        </span>
                    </div>
                </div>

                <div class="row">
                    <div class="col s12 m3">
                        <span class="btn contant">
                            <span class="small-info">وضعیت سرویس :</span>
                            @if (Model.RequsetState == DAL.RequsetSate.AwaitingAcademy || Model.RequsetState == DAL.RequsetSate.AwaitingContractor)
                            {
                                <text>در دست بررسی</text>

                            }
                            else
                            {
                                <text >
                                @Html.DisplayFor(c => c.RequsetState)
                                </text>

                            }
                        </span>
                    </div>
                </div>
                <div class="row">
                    <div class="col s12 m3">
                        <span class="btn contant">
                            <span class="small-info"> هزینه یک سال تحصیلی  :</span> طبق تعرفه آموزشگاه
                        </span>
                    </div>
                </div>
                @if (Model.RequsetState == DAL.RequsetSate.AwaitingAcademy)
                {
                    <div class="row">
                        <div class="col s12 m6">
                            <a class="btn waves-effect waves-light green" onclick="Changestate('Reserve')">تایید و رزرو</a>
                            <a class="btn waves-effect waves-light red" onclick="Changestate('Cancel')"> لغو درخواست </a>
                        </div>
                    </div>
                }


            </div>

        </div>
    </div>
</div>


@section Scripts{
    <script src="~/js/mapbox.js"></script>
    <script>

        $(document).ready(function () {

            var routedata = {
                origin: "@Model.Origin",
                Distination: "@Model.Distination",
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetRoute", "Home")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data:  JSON.stringify(routedata),
                success: function (response) {
                    addlayer(response);
                    addIndicator(response);
                    console.log(response.coordinates[0]);


                },
                failure: function (response) {
                    console.log(response);

                },
            });
        });


        function addlayer(response) {
            map.addLayer({
                "id": "route",
                "type": "line",
                "source": {
                    "type": "geojson",
                    "data": response
                },
                "layout": {
                    "line-join": "round",
                    "line-cap": "square",


                },
                "paint": {
                    "line-color": "#3887be",
                    "line-width": 8,

                }
            });
            map.addLayer({
                id: 'routearrows',
                type: 'symbol',
                source: 'route',
                layout: {
                    'symbol-placement': 'line',
                    'text-field': '▶',
                    'text-size': {
                        base: 1,
                        stops: [[12, 24], [22, 60]]
                    },
                    'symbol-spacing': {
                        base: 1,
                        stops: [[12, 30], [22, 160]]
                    },
                    'text-keep-upright': false
                },
                paint: {
                    'text-color': '#3887be',
                    'text-halo-color': 'hsl(55, 11%, 96%)',
                    'text-halo-width': 3
                }
            });



            // Geographic coordinates of the LineString
            var coordinates = response.coordinates;

            // Pass the first coordinates in the LineString to `lngLatBounds` &
            // wrap each coordinate pair in `extend` to include them in the bounds
            // result. A variation of this technique could be applied to zooming
            // to the bounds of multiple Points or Polygon geomteries - it just
            // requires wrapping all the coordinates with the extend method.
            var bounds = coordinates.reduce(function (bounds, coord) {
                return bounds.extend(coord);
            }, new mapboxgl.LngLatBounds(coordinates[0], coordinates[1]));

            map.fitBounds(bounds);

        }

        function addIndicator(response)
        {

            var start = response.coordinates[0];
            var end = response.coordinates[response.coordinates.length - 1];
            map.loadImage('../statatics/icons/Circle_Yellow.png', function (error, image) {
                if (error) throw error;
                map.addImage('icon', image);
            });
            map.addLayer({
                "id": 'start',
                "type": "symbol",
                "source": {
                    "type": "geojson",
                    "data": {
                        "type": "FeatureCollection",
                        "features": [{
                            "type": "Feature",
                            "geometry": {
                                "type": "Point",
                                "coordinates": [start[0], start[1]]
                            }
                        }]
                    }
                },

                "layout": {

                    "icon-image": 'icon',
                    "icon-size": 0.2,
                    "text-field": 'مبدا',
                    "text-font": [

          "Open Sans Semibold",
          "Arial Unicode MS Bold"
                    ],
                    "text-size": 12
                }
            });
            map.addLayer({
                "id": 'end',
                "type": "symbol",
                "source": {
                    "type": "geojson",
                    "data": {
                        "type": "FeatureCollection",
                        "features": [{
                            "type": "Feature",
                            "geometry": {
                                "type": "Point",
                                "coordinates": [end[0], end[1]]
                            }
                        }]
                    }
                },

                "layout": {

                    "icon-image": 'icon',
                    "icon-size": 0.2,
                    "text-field": 'مقصد',
                    "text-font": [
         "Open Sans Semibold",
         "Arial Unicode MS Bold"
                    ],
                    "text-size": 12
                }
            });
        }




        function Changestate(state)
        {

            LoadingStart();
            var Reqdata = {
                Token: '1',
                requsetId: '@Model.Id',
                requsetstate: state,
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("CancelOrAccept", "Home")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Reqdata),
                success: function (response) {
                    LoadingEnd();
                        ShowMessage(response.message);

                },
                failure: function (response) {
                    console.log(response);
                    LoadingEnd();
                    ShowMessage("خطایی بوجودآمد");

                },
            });
        }
    </script>
}