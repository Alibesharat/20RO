@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
   @:ViewData["ClassName"]=@@Html.DisplayNameFor(c=>c.ClassName);
    @:ViewData["Title"] = $"جزییات {ViewData["ClassName"]} ";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
   @:<title>@@ViewData["Title"]</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}

  <div class="box box-primary">
    <div class="box-header">
<h3 class="box-header text-center">
   <span class="text-warning"> @@ViewData["Title"]
    </span>
    </h3>
    <hr />
   </div>
    <div class="box-body">
    <div class="table-responsive">
    <table class="table table-bordered table-condensed table-hover table-striped text-center">
        <tbody>
@{
    Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
    Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);

    foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
    {
        if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
            && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
        {
            <tr>
                <td>
                    @@Html.DisplayNameFor(model => model.@GetValueExpression(property))

                </td>
                <td>
                    @@Html.DisplayFor(model => model.@GetValueExpression(property))

                </td>
            </tr>
       
        }
        else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
        {
            <tr>
                <td>
                    @@Html.DisplayNameFor(model => model.@GetValueExpression(navigation))

                </td>
                <td>
                    @@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)

                </td>
            </tr>
        }
    }
}  
            </tbody>
        </table>
            </div>
</div>
</div>

<div>
@{
    string pkName = GetPrimaryKeyName();
    if (pkName != null)
    {
    @:<a asp-action="Edit" asp-route-id="@@Model.@pkName">ویرایش</a> |
    @:<a asp-action="Index">بازگشت به لیست</a>
    }
    else
    {
    @:@@Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    @:<a asp-action="Index">Back to List</a>
    }
}</div>
@{
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}