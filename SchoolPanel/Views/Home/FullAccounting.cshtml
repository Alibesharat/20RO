@model IEnumerable<DAL.Accounting>
@using DAL
@using DNTPersianUtils.Core

@{
    var def = Model.Count();
    int count = int.Parse(def.ToString());
    ViewData["ClassName"] = @Html.DisplayNameFor(c => c.ClassName);
    ViewData["Title"] = $"لیست {ViewData["ClassName"]} ها";
}


<div class="box box-primary">
    <div class="box-header">
        <h3 class="box-header text-center">
            <span class="btn btn-warning">
                @ViewData["Title"]
                <span class="badge bg-aqua">
                    @ViewData["Count"]
                </span>
            </span>
        </h3>

        <hr />

    </div>
    <div class="box-body">
        <div class="table-responsive">
            <table class="table table-bordered table-condensed table-hover table-striped text-center">

                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ServiceRequset.FullName)

                        </th>
                        <th>
                            قابل پرداخت
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Payed)
                        </th>

                        <th>
                           مانده همه
                        </th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {

                        <tr>

                            <td>
                                <a asp-action="Accounting" asp-route-id="@item.ServiceRequsetId">
                                    @Html.DisplayFor(modelItem => item.ServiceRequset.FullName)
                                </a>
                            </td>
                            <td>
                                @item.ServiceRequset?.Price.ToString("N0")
                            </td>
                            <td>
                                @item.Payed.ToString("N0")
                            </td>
                            <td>
                               
                            </td>

                        </tr>

                    }
                </tbody>
                <tfoot class="bg-red">
                    <tr>
                        <td>جمع کل</td>
                        @{
                            var allmustpay = Model.Where(c=>c.ServiceRequset.RequsetState!=RequsetSate.Cancel).Sum(c => c.ServiceRequset.Price);
                            var Sumpayed = Model.Sum(c => c.Payed);
                            var AllDiff = allmustpay - Sumpayed;
                        }
                        <td> @allmustpay.ToString("N0") </td>
                        <td> @Sumpayed.ToString("N0") </td>
                        <td> @AllDiff.ToString("N0") </td>
                    </tr>
                </tfoot>
            </table>
        </div>


        <a asp-action="index" class="btn btn-sm btn-default"> بازگشت به لیست درخواست ها </a>


    </div>
</div>
