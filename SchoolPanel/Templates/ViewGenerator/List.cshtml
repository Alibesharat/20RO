@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @GetEnumerableTypeExpression(Model.ViewDataTypeName)

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
     @:var def = ViewData["Count"] ?? "0";
     @:int count = int.Parse(def.ToString());
     @:ViewData["ClassName"]=@@Html.DisplayNameFor(c=>c.ClassName);
     @:ViewData["Title"] = $"لیست {ViewData["ClassName"]} ها";
  

        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@@ViewData["Title"]</title>
@:</head>
@:<body>
        //    PushIndent("    ");
    }
    @:<div class="box box-primary">
    @:<div class="box-header">
@:<h3 class="box-header text-center">
    @:<span class="btn btn-warning"> @@ViewData["Title"] -@@ViewBag.searchterm
      @:<span class="badge bg-aqua"> @@ViewData["Count"]
    @:</span>
    @:</span>
    @:</h3>
    @:<hr />
    @:<div class="col-lg-12">
    @:<div class="col-lg-1">
        <a asp-action="Create" class="btn btn-microsoft "> افزودن <i class="fa fa-plus"></i></a>
    @:</div>
    @:<form>
        @:<div class="col-lg-3">
            @:<input class="form-control" name="searchterm" type="text" value="@@ViewBag.searchterm" />
        @:</div>
        @:<div class="col-lg-2">
            @:<button type="submit" class="btn btn-success"> جست و جو  <i class="fa fa-search"></i>
@:</button>
        @:</div>
    @:</form>
@:</div>
     @:<div class="col-lg-12">
            @:<hr />
        @:</div>
   @:</div>
    @:<div class="box-body">
    @:<div class="table-responsive">
@:<table class="table table-bordered table-condensed table-hover table-striped text-center">
    @:<thead>
        @:<tr>
        Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
        Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);

        foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
        {
            if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
            {
            <th>
                @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
            </th>
            }
            else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
            {
            <th>
                @@Html.DisplayNameFor(model => model.@GetValueExpression(navigation))
            </th>
            }
        }
            @:<th></th>
        @:</tr>
    @:</thead>
    @:<tbody>
@:@@foreach (var item in Model) {
        @:<tr>
        foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
        {
            if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
            {
            <td>
                @@Html.DisplayFor(modelItem => item.@GetValueExpression(property))
            </td>
            }
            else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
            {
            <td>
                @@Html.DisplayFor(modelItem => item.@GetValueExpression(navigation).@navigation.DisplayPropertyName)
            </td>
            }
        }
        string pkName = GetPrimaryKeyName();
        if (pkName != null)
        {
            @:<td>
                @:<a title="ویرایش"  asp-action="Edit" class="btn btn-sm btn-warning" asp-route-id="@@item.@pkName"><i class="fa fa-edit"></i></a> |
                @:<a title="اطلاعات بیشتر" asp-action="Details" class="btn btn-sm btn-info" asp-route-id="@@item.@pkName"><i class="fa fa-info-circle "></i></a> 
                @:@*<a title="حذف"  asp-action="Delete" class="btn btn-sm btn-danger" asp-route-id="@@item.@pkName"><i class="fa fa-trash"></i></a>*@
            @:</td>
        }
        else
        {
              <td>
                  @@Html.ActionLink("ویرایش", "Edit", new { /* id=item.PrimaryKey */ }) |
                  @@Html.ActionLink("اطلاعات بیشتر", "Details", new { /* id=item.PrimaryKey */ }) |
                  @@Html.ActionLink("حذف", "Delete", new { /* id=item.PrimaryKey */ })
              </td>
        }
        @:</tr>
@:}
    @:</tbody>

@:</table>
    @:</div>
     @:<partial name="~/Views/Shared/_paging.cshtml"  />
    @:</div>
    @:</div>
    if(!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }

    string GetEnumerableTypeExpression(string typeName)
    {
        return "IEnumerable<" + typeName + ">";
    }
}